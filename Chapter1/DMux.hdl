// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/1/DMux.hdl
/**
 * Demultiplexor:
 * [a, b] = [in, 0] if sel = 0
 *          [0, in] if sel = 1
 */
CHIP DMux {
    IN in, sel;
    OUT a, b;
    PARTS:
	Not(in=sel, out=nsel);
	And(a=in, b=nsel, out=a);
	And(a=in, b=sel, out=b);
}

DMux를 위한 Boolean Operation은 다음과 같다.
a = And(Not(sel), in), b = And(sel, in)

boolean operationㅇ을 HDL(Hardware Description Language)로 작성하면, 위와 같은 내용이 된다.

해당 Chip은 Mux보다는 수월하게 이해가 됐지만, 출력값인 a와 b모두 특정 값을 가지게 되고 최종적으로 이게 선택의 역활을 하는게 신기하다.

DMux = DeMultiplex로, Multiplexer의 정반대 역할을 한다.
Mux는 여러개의 입력들 중 하나를 선택해서 출력으로 이어주는 역할을 했다. 반면, DMux는 하나의 입력을 sel의 입력값에 따라 여러 출력 중 하나를 선택해서 이어주는 역할을 한다.

